# This flake was initially generated by fh, the CLI for FlakeHub (version 0.1.21)
{
  # A helpful description of your flake
  description = "content agnostic spaced repetition";

  # Flake inputs
  inputs = {
    pkg2zip.url = "github:/lakrestofer/pkg2zip";
    flake-schemas.url = "https://flakehub.com/f/DeterminateSystems/flake-schemas/*";
    nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";
    flake-parts.url = "github:hercules-ci/flake-parts";
    flake-root.url = "github:srid/flake-root";
  };

  # Flake outputs that other flakes can use
  outputs =
    {
      self,
      flake-schemas,
      nixpkgs,
      flake-parts,
      pkg2zip,
      ...
    }@inputs:
    flake-parts.lib.mkFlake { inherit inputs self; } {
      imports = [
        inputs.flake-root.flakeModule
        inputs.flake-parts.flakeModules.easyOverlay
      ];
      flake = {
        # Schemas tell Nix about the structure of your flake's outputs
        schemas = flake-schemas.schemas;
      };
      systems = [
        "x86_64-linux"
      ];
      perSystem =
        {
          pkgs,
          self',
          inputs',
          system,
          config,
          ...
        }:
        {
          _module.args.pkgs = import inputs.nixpkgs {
            inherit system;
            overlays = [ ];
            config = { };
          };
          flake-root.projectRootFile = "flake.nix"; # Not necessary, as flake.nix is the default
          devShells.default = pkgs.mkShell {
            inputsFrom = [ config.flake-root.devShell ]; # Provides $FLAKE_ROOT in dev shell
            buildInputs = [
              self'.packages.default
            ];
          };
          packages = {
            default = pkgs.stdenv.mkDerivation {
              name = "nopaystation_scripts";
              version = "0.0.1";

              src = ./.;
              nativeBuildInputs = [ pkgs.makeWrapper ];
              buildInputs = [
                pkgs.curl
                (pkgs.python3.withPackages (
                  p: with p; ([
                    lxml
                  ])
                ))
                inputs'.pkg2zip.packages.default
              ];

              buildPhase = "";

              installPhase = ''
                mkdir -p $out/bin
                cp -r nps_*.sh pyNPU.py $out/bin
                chmod +x $out/bin/*

                for script in $out/bin/*; do
                  wrapProgram $script \
                              --prefix PATH : $out/bin:${
                                pkgs.lib.makeBinPath [
                                  pkgs.curl
                                  (pkgs.python3.withPackages (
                                    p: with p; ([
                                      lxml
                                    ])
                                  ))
                                  inputs'.pkg2zip.packages.default
                                ]
                              }
                done
              '';
              meta = {
                description = "Collection of nopaystation scripts";
                license = pkgs.lib.licenses.gpl3Only;
                platforms = pkgs.lib.platforms.linux;
              };

            };
          };
        };
    };
}
